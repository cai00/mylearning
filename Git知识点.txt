一、小结
现在总结一下今天学的两点内容：

初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

第二步，使用命令git commit，完成。

【初始化方法】
$ mkdir learngit
$ cd learngit
$ pwd
/Users/michael/learngit
pwd命令用于显示当前目录。在我的Mac上，这个仓库位于/Users/michael/learngit。

【总结】
1:执行git add readme.txt 指令时要保证在learngit库中存在此文件（自己在库中建一个）否则出现 fatal: pathspec 'readme.txt' did not match any files

2:执行git commit -m指令时前提要登陆，执行git config user.name "name" git config user.email "name@xxx.com"然后再执行git commit -m指令

总结：
1：创建文件目录 mkdir learngit
2：进入目录 cd learngit
3：初始化 git init
4：git config user.name "someone"
5：git config user.email "someone@someplace.com"
6：将文件加入到库中两中添加方法：一库中原来存在此文件，二自己创建一个文件然后执行git add “xxx”
7： git commit -m “说明”

二、命令
（1） cd 某个目录  		【进入相应的目录】
（2） pwd          		【查看当前仓库目录】
（3） git init     		【进入仓库目录】
（4） ls -ah       		【显示.git目录】
（5） git status   		【查看仓库当前状态】
（6） git diff     		【查看文件被修改了哪些内容】
（7） git add 某个文件 		【添加文件】
（8） git commit -m "说明"	【提交文件】

【版本回退命令】
（9） git log 			【查看提交历史记录】
（10）git --pretty=oneline	【查看记录commit id】
（11）git reset --hard HEAD   	【查看当前版本】（已经提交到marse分支回退的方法）
（11.1）git reset --hard HEAD~100【回退到100个版本】
（12）git reset --hard （3628164）commit id 【查看指定的某个版本】
（13）cat 某个文件		【查看文件的内容】
（14）git reflog  		【查看每一次命令记录】
小结
现在总结一下：

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

【工作区和暂存区】
前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：

第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。

你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。

【管理修改】
小结
现在，你又理解了Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加入到commit中。

【撤销修改】
小结

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令【git checkout -- file】。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，

第一步用命令【git reset HEAD file】，就回到了场景1（即工作区），第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。【git reset --hard HEAD~100】

【删除文件】
（1）rm 某个文件              			     【删除工作区的文件，不会删除版本库】
（2）git rm 某个文件，然后git commit -m "说明"       【删除版本库某个文件】
（3）git checkout -- 某个文件			     【用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”】
小结
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，
你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
